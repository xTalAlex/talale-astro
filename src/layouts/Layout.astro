---
export interface Props {
	title?: string;
	description?: string;
	ogType?: string;
	ogImage?: string;
	ogImageAlt?: string;
	noindex?: boolean;
}

import "@assets/css/main.css";
import Config from "../site_config.json";
import { SEO } from "astro-seo";
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
import Modal from "@components/vue/Modal.vue";
import BackToTop from "@components/BackToTop.astro";
import IubendaCookieSolution from "@components/IubendaCookieSolution.astro";
import Alert from "@components/Alert.astro";
import RadioMenu from "@components/vue/RadioMenu.vue";
import { ViewTransitions } from "astro:transitions";

const { title = null , description = Config.description, ogType = "website", ogImage = Config.url + "/images/sharepreview.png", ogImageAlt = "Website Header", noindex = false } = Astro.props;

const {COOKIEBOT_ID, IUBENDA_SITE_ID, IUBENDA_POLICY_ID, GOOGLE_SEARCH_CONSOLE_ID, GOOGLE_ANALYTICS_ID, TAWKTO_WIDGET_URL } = import.meta.env;
const canonical = Astro.url.href;
const fullTitle = title ? (ogType == "article" ? title + " | " + Config.title : Config.title + " | " + title ) : Config.title + " | " + Config.motto;

const openGraph = {
	basic : {
		title : title ?? Config.title,
		type: ogType,
		image: ogImage,
		url: canonical,
	},
	image: {
		alt: ogImageAlt
	},
};
---

<!DOCTYPE html>
<html lang="it" data-theme="halloween" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />

		<ViewTransitions />

		<SEO 
			title={fullTitle} 
			description={description} 
			canonical={canonical}
			openGraph={openGraph} 
			noindex={noindex}
		/>

		<link rel="icon" type="image/x-icon" href="/favicon.ico" />

		<link rel="alternate" type="application/rss+xml" title={`RSS ${fullTitle}`} href="rss.xml" />

		{
			COOKIEBOT_ID && (
				<script type="text/javascript"
					id="Cookiebot"
					src="https://consent.cookiebot.com/uc.js"
					data-cbid={`${COOKIEBOT_ID}`}
					async
				></script>
			)
		}

		{
			(IUBENDA_SITE_ID && IUBENDA_POLICY_ID) && (
				<IubendaCookieSolution
					siteId={IUBENDA_SITE_ID}
					policyId={IUBENDA_POLICY_ID}
				/>
			)
		}

		{
			GOOGLE_SEARCH_CONSOLE_ID && (
				<meta name="google-site-verification" content={GOOGLE_SEARCH_CONSOLE_ID}/>
			)
		}

		{
			GOOGLE_ANALYTICS_ID && (
				<script class="_iub_cs_activate"
					type={`${(COOKIEBOT_ID || IUBENDA_SITE_ID) ? 'text/plain' : 'text/javascript'}`}
					async
					src={`https://www.googletagmanager.com/gtag/js?id=${GOOGLE_ANALYTICS_ID}`}
					data-cookieconsent="statistics"
					data-iub-purposes="4"
				></script>
				<script data-gaid={GOOGLE_ANALYTICS_ID}>
					window.dataLayer = window.dataLayer || [];
					function gtag() {
						dataLayer.push(arguments);
					}
					gtag("js", new Date());

					gtag("config", document.currentScript.dataset.gaid);
				</script>
			)
		}

		<script>
			import netlifyIdentity from "netlify-identity-widget";
			window.netlifyIdentity = netlifyIdentity;
			document.dispatchEvent(new Event("identityLoaded"));
		</script>

	</head>
	<body class="font-sans">
		<Navbar />
		<main class="mb-12 pt-16">
			<Alert/>
			<slot />
		</main>
		<Footer />

		<RadioMenu transition:persist client:only="vue" />

		<BackToTop />

		<Modal client:only="vue"/>

		{
			TAWKTO_WIDGET_URL && (
				<script class="_iub_cs_activate"
					type={`${(COOKIEBOT_ID || IUBENDA_SITE_ID) ? 'text/plain' : 'text/javascript'}`}
					data-cookieconsent="preferences, statistics"
					data-iub-purposes="2,4"
					data-widget={TAWKTO_WIDGET_URL}
				>
					var Tawk_API=Tawk_API||{};
					window.Tawk_API.onLoad = function(){
						document.dispatchEvent(
							new CustomEvent("tawktoLoaded")
						);
					};
					var Tawk_LoadStart=new Date();
					(function () {
						var s1 = document.createElement("script"),
							s0 = document.getElementsByTagName("script")[0];
						s1.async = true;
						s1.src = document.currentScript.dataset.widget;
						s1.charset = "UTF-8";
						s1.setAttribute("crossorigin", "*");
						s0.parentNode.insertBefore(s1, s0);
					})();
				</script>
			)
		}
	</body>
</html>
