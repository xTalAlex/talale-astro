---
import Layout from "@layouts/Layout.astro";
import { games } from "@data/switch-games";
import GamesSearchbar from "@components/GamesSearchbar.astro";
import Config from "../../site_config.json";
import Pagination from "@components/Pagination.astro";
import { formatDate } from "../../utils";
import AddToWishlist from "@components/vue/AddToWishlist.vue";
import Wishlist from "@components/vue/Wishlist.vue";

import { Image } from "astro:assets";

export async function getStaticPaths({ paginate }) {
  return paginate(games, { pageSize: Config.gamesPerPage });
}
const { page } = Astro.props;
---

<Layout
  title={`Catalogo Nintendo Switch - Pagina ${page.currentPage}`}
  description="Catalogo con le informazioni su tutti i giochi per Nintendo Switch messe a disposizione da IGDB.com"
  noindex={page.currentPage != 1}
>
  <div class="container w-full max-w-5xl px-5 md:mx-auto">
    <h1 class="pt-12 text-center text-4xl font-bold">
      Catalogo Nintendo Switch
    </h1>

    <div class="mt-4 text-center text-2xl font-semibold">
      Pagina {page.currentPage}
    </div>

    <div class="my-12 w-full">
      <GamesSearchbar />
    </div>

    <Wishlist client:only="vue" />

    <div class="divider"></div>

    <div
      class="mx-auto mt-12 grid h-max place-items-center gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3"
    >
      {
        page.data.map((game) => (
          <div
            class="card card-compact h-full w-full bg-base-100 shadow-xl"
            id={game.slug}
          >
            {(game.cover || game.screenshots) && (
              <figure>
                <div class="swiper h-48 max-w-xs md:w-full">
                  <div class="swiper-wrapper">
                    {game.cover && (
                      <div class="swiper-slide bg-neutral">
                        <Image
                          height="192"
                          width="320"
                          class="mx-auto h-full object-cover"
                          src={game.cover.url.replace("t_thumb", "t_cover_big")}
                          alt={game.name}
                        />
                      </div>
                    )}
                    {game.artworks &&
                      game.artworks.map((artwork, id) => (
                        <div class="swiper-slide">
                          <Image
                            height="192"
                            width="320"
                            class="w-full object-cover"
                            src={artwork.url.replace(
                              "t_thumb",
                              "t_screenshot_big",
                            )}
                            alt={`Artwork ${id + 1}`}
                          />
                        </div>
                      ))}
                    {game.screenshots &&
                      game.screenshots.map((screenshot, id) => (
                        <div class="swiper-slide">
                          <Image
                            height="192"
                            width="320"
                            class="w-full object-cover"
                            src={screenshot.url.replace(
                              "t_thumb",
                              "t_screenshot_big",
                            )}
                            alt={`Screenshot ${id + 1}`}
                          />
                        </div>
                      ))}
                  </div>
                  <div class="swiper-pagination" />
                  <div class="swiper-button-prev" />
                  <div class="swiper-button-next" />
                </div>
              </figure>
            )}
            <div class="card-body mx-auto max-w-xs md:w-full">
              <h2 class="card-title text-base" id={game.name}>
                {game.url && (
                  <a href={game.url} class="l link" target="_blank">
                    {game.name}
                    <span>
                      {game.platforms?.length == 1 && (
                        <div class="badge badge-accent badge-xs">Exclusive</div>
                      )}
                    </span>
                  </a>
                )}
                {!game.url && (
                  <span>
                    {game.name}
                    <span>
                      {game.platforms?.length == 1 && (
                        <div class="badge badge-accent badge-xs">Exclusive</div>
                      )}
                    </span>
                  </span>
                )}
              </h2>
              <div class="flex justify-between">
                <div>
                  {game.total_rating && (
                    <div class="badge badge-primary font-bold">
                      {Math.round(game.total_rating)}
                    </div>
                  )}
                </div>
                <div>
                  {game.first_release_date && (
                    <div class="badge badge-ghost badge-xs">
                      {formatDate(new Date(game.first_release_date * 1000))}
                    </div>
                  )}
                </div>
              </div>
              <p class="my-6 h-28 overflow-y-auto text-xs">{game.summary}</p>
              <div class="flex flex-col space-y-1">
                <div class="flex  h-12 w-full flex-nowrap space-x-2 overflow-x-auto overflow-y-hidden">
                  {game.genres?.map((genre) => (
                    <div class="badge badge-primary badge-sm whitespace-nowrap font-semibold">
                      {genre.name}
                    </div>
                  ))}
                </div>
                <div class="flex h-12 w-full flex-nowrap space-x-2 overflow-x-auto overflow-y-hidden">
                  {game.themes?.map((theme) => (
                    <div class="badge badge-secondary badge-sm whitespace-nowrap font-semibold">
                      {theme.name}
                    </div>
                  ))}
                </div>
                <div class="flex h-8 justify-center space-x-2">
                  {game.involved_companies?.map(
                    (company) =>
                      company.company.logo &&
                      company.company.websites && (
                        <div
                          class="tooltip tooltip-top"
                          data-tip={company.company.name}
                        >
                          <a
                            href={
                              company.company.websites &&
                              company.company.websites[0].url
                            }
                            target="_blank"
                          >
                            <Image
                              height="24"
                              width="24"
                              class="h-6 rounded-full object-fill"
                              alt={company.company.name}
                              src={
                                company.company.logo && company.company.logo.url
                              }
                            />
                          </a>
                        </div>
                      ),
                  )}
                </div>
              </div>
              <div class="card-actions justify-end">
                <AddToWishlist
                  client:only="vue"
                  id={game.slug}
                  name={game.name}
                  imgSrc={game.cover?.url}
                />
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <div class="divider"></div>

    <div class="mx-auto mb-6 flex justify-center">
      <button id="randomPageButton" class="btn btn-accent uppercase"
        >Pagina a caso</button
      >
      <input id="lastPageValue" type="hidden" value={page.lastPage} />
    </div>

    <div class="mx-auto flex justify-center">
      <Pagination
        currentPage={page.currentPage}
        lastPage={page.lastPage}
        url="/nintendo-switch"
      />
    </div>
  </div>
</Layout>

<script>
  import Swiper from "swiper";
  import { Navigation, Pagination } from "swiper/modules";
  const swipers = new Swiper(".swiper", {
    modules: [Navigation, Pagination],
    loop: true,
    pagination: {
      el: ".swiper-pagination",
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
  });

  const randomPageButton = document.getElementById("randomPageButton");
  const lastPage = document.getElementById("lastPageValue")?.value ?? 1;
  randomPageButton.onclick = () => {
    window.location.href =
      "/nintendo-switch/" + Math.ceil(Math.random() * lastPage);
  };
</script>
